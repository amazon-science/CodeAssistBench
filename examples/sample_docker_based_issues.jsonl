{"number": 35, "title": "Error when only predicting ligand", "created_at": "2024-12-08T15:34:57Z", "closed_at": "2024-12-17T12:52:40Z", "commit_id": "a7803a8f137d256285b5b83f3338a0ee17f2e91d", "labels": [], "url": "https://github.com/bytedance/Protenix/issues/35", "body": "Hi! I wanna only predict the ligand structure, but proteinix raised errors:\r\n\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"/workspace/runner/inference.py\", line 213, in main\r\n    runner.dumper.dump(\r\n  File \"/workspace/runner/dumper.py\", line 74, in dump\r\n    self.dump_predictions(\r\n  File \"/workspace/runner/dumper.py\", line 107, in dump_predictions\r\n    self._save_structure(\r\n  File \"/workspace/runner/dumper.py\", line 135, in _save_structure\r\n    save_structure_cif(\r\n  File \"/workspace/protenix/data/utils.py\", line 181, in save_structure_cif\r\n    save_atoms_to_cif(\r\n  File \"/workspace/protenix/data/utils.py\", line 154, in save_atoms_to_cif\r\n    cifwriter.save_to_cif(\r\n  File \"/workspace/protenix/data/utils.py\", line 288, in save_to_cif\r\n    block_dict.update(self._get_entity_poly_and_entity_poly_seq_block())\r\n  File \"/workspace/protenix/data/utils.py\", line 260, in _get_entity_poly_and_entity_poly_seq_block\r\n    \"entity_poly\": pdbx.CIFCategory(entity_poly),\r\n  File \"/opt/conda/lib/python3.10/site-packages/biotite/structure/io/pdbx/cif.py\", line 327, in __init__\r\n    columns = {\r\n  File \"/opt/conda/lib/python3.10/site-packages/biotite/structure/io/pdbx/cif.py\", line 328, in <dictcomp>\r\n    key: CIFColumn(col) if not isinstance(col, CIFColumn) else col\r\n  File \"/opt/conda/lib/python3.10/site-packages/biotite/structure/io/pdbx/cif.py\", line 138, in __init__\r\n    data = CIFData(data, str)\r\n  File \"/opt/conda/lib/python3.10/site-packages/biotite/structure/io/pdbx/cif.py\", line 66, in __init__\r\n    self._array = _arrayfy(array)\r\n  File \"/opt/conda/lib/python3.10/site-packages/biotite/structure/io/pdbx/cif.py\", line 1061, in _arrayfy\r\n    raise ValueError(\"Array must contain at least one element\")\r\nValueError: Array must contain at least one element\r\n```\r\n\r\nThe json file is:\r\n```\r\n[\r\n    {\r\n        \"sequences\": [\r\n            {\r\n                \"ligand\": {\r\n                    \"ligand\": \"COc1cc(OC)ccc1/C=C/N(C(=O)C)C\",\r\n                    \"count\": 1\r\n                }\r\n            }\r\n        ],\r\n        \"modelSeeds\": [],\r\n        \"assembly_id\": \"1\",\r\n        \"name\": \"LIG_1\"\r\n    }\r\n]\r\n\r\n```\r\n", "comments_url": "https://api.github.com/repos/bytedance/Protenix/issues/35/comments", "author": "v-shaoningli", "comments": [{"user": "cloverzizi", "created_at": "2024-12-12T03:05:45Z", "body": "Hi Shaoning, \r\n\r\nThis issue has been resolved in the recent code update. The task results without polymer can now be saved normally. \r\nThank you for the feedback :D\r\n"}, {"user": "v-shaoningli", "created_at": "2024-12-12T08:12:44Z", "body": "Thanks for the update!"}], "satisfaction_conditions": ["A solution that allows predicting only ligand structures without errors", "Proper handling of cases where only ligand data is provided in the input JSON", "Successful saving/output of prediction results for ligand-only tasks"], "_classification": {"category": "Can be dockerized without any issue", "timestamp": "2025-04-14 01:14:41"}, "dockerfile": "FROM ai4s-cn-beijing.cr.volces.com/pytorch-mirror/pytorch:2.3.1-cuda12.1-cudnn8-devel\n\n# Set environment variables\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=Asia/Shanghai\n\n# Install system dependencies\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    wget \\\n    g++ \\\n    gcc \\\n    libc6-dev \\\n    make zlib1g zlib1g-dev \\\n    git git-lfs expect zsh vim wget curl unzip zip cmake cmake-curses-gui libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev \\\n    libxrender1 libxext6 iproute2 \\\n    postgresql \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install HHsuite\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    apt-get install --no-install-recommends -y hmmer cmake cmake-curses-gui && \\\n    git clone --branch v3.3.0 https://github.com/soedinglab/hh-suite.git /tmp/hh-suite && \\\n    mkdir /tmp/hh-suite/build && \\\n    cd /tmp/hh-suite/build && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/opt/hhsuite .. && \\\n    make -j 32 && make install && \\\n    ln -s /opt/hhsuite/bin/* /usr/bin && \\\n    cd - && \\\n    rm -rf /tmp/hh-suite && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install Python dependencies\nRUN pip3 --no-cache-dir install \\\n    scipy \\\n    ml_collections \\\n    tqdm \\\n    pandas \\\n    dm-tree==0.1.6 \\\n    rdkit==\"2023.03.01\" \\\n    biopython==1.83 \\\n    modelcif==0.7 \\\n    biotite==1.0.1 \\\n    gemmi==0.6.5 \\\n    pdbeccdutils==0.8.5 \\\n    scikit-learn==1.2.2 \\\n    scikit-learn-extra \\\n    deepspeed==0.14.4 \\\n    protobuf==3.20.2 \\\n    tos icecream ipdb wandb numpy==1.26.3 matplotlib==3.9.2 ipywidgets py3Dmol\n\n# For H20 compatibility\nRUN pip3 install --no-cache-dir nvidia-cublas-cu12==12.4.5.8 --no-deps\n\n# Clone CUTLASS for DeepSpeed DS4Sci_EvoformerAttention kernel\nRUN git clone -b v3.5.1 https://github.com/NVIDIA/cutlass.git /opt/cutlass\nENV CUTLASS_PATH=/opt/cutlass\n\n# Clone the repository and checkout the specific commit\nWORKDIR /workspace\nRUN git clone https://github.com/bytedance/Protenix.git && \\\n    cd Protenix && \\\n    git checkout a7803a8f137d256285b5b83f3338a0ee17f2e91d\n\n# Install the package in development mode\nWORKDIR /workspace/Protenix\nRUN pip install -e .\n\n# Create data directories that might be needed for inference\nRUN mkdir -p /af3-dev/release_data /af3-dev/release_model\n\n# Add information about downloading model and data files\nRUN echo \"To download model files run:\" > /workspace/README_FIRST.txt && \\\n    echo \"wget -P /af3-dev/release_model/ https://af3-dev.tos-cn-beijing.volces.com/release_model/model_v1.pt\" >> /workspace/README_FIRST.txt && \\\n    echo \"\" >> /workspace/README_FIRST.txt && \\\n    echo \"To download minimal data files needed for inference:\" >> /workspace/README_FIRST.txt && \\\n    echo \"wget -P /af3-dev/release_data/ https://af3-dev.tos-cn-beijing.volces.com/release_data/components.v20240608.cif\" >> /workspace/README_FIRST.txt && \\\n    echo \"wget -P /af3-dev/release_data/ https://af3-dev.tos-cn-beijing.volces.com/release_data/components.v20240608.cif.rdkit_mol.pkl\" >> /workspace/README_FIRST.txt\n\n# Set the working directory\nWORKDIR /workspace", "language": "python"}
{"number": 17, "title": "Cannot find package '.../node_modules/mcp-proxy/dist/MCPProxy.js' when running npx fastmcp dev", "created_at": "2025-03-09T18:28:44Z", "closed_at": "2025-03-09T21:58:21Z", "commit_id": "1314f06919e1f20b725d648390336ce4afe16a23", "labels": [], "url": "https://github.com/punkpeye/fastmcp/issues/17", "body": "I'm trying to run the example server from the repo and am getting the following error with both `npx fastmcp dev src/server.ts`. This also occurs if I build the server and run `npx fastmcp dev dist/server.js`.\n\n```\n$ npx fastmcp dev src/server.ts\n\nnode:internal/modules/run_main:104\n    triggerUncaughtException(\n    ^\nError: Cannot find package '/Users/nbbaier/my-mcp-server/node_modules/mcp-proxy/dist/MCPProxy.js' imported from /Users/nbbaier/my-mcp-server/node_modules/fastmcp/dist/FastMCP.js\n    at legacyMainResolve (node:internal/modules/esm/resolve:204:26)\n    at packageResolve (node:internal/modules/esm/resolve:778:12)\n    at moduleResolve (node:internal/modules/esm/resolve:854:18)\n    at defaultResolve (node:internal/modules/esm/resolve:984:11)\n    at nextResolve (node:internal/modules/esm/hooks:748:28)\n    at resolveBase (file:///Users/nbbaier/.npm/_npx/fd45a72a545557e9/node_modules/tsx/dist/esm/index.mjs?1741544730509:2:3212)\n    at resolveDirectory (file:///Users/nbbaier/.npm/_npx/fd45a72a545557e9/node_modules/tsx/dist/esm/index.mjs?1741544730509:2:3584)\n    at resolveTsPaths (file:///Users/nbbaier/.npm/_npx/fd45a72a545557e9/node_modules/tsx/dist/esm/index.mjs?1741544730509:2:4073)\n    at resolve (file:///Users/nbbaier/.npm/_npx/fd45a72a545557e9/node_modules/tsx/dist/esm/index.mjs?1741544730509:2:4447)\n    at nextResolve (node:internal/modules/esm/hooks:748:28) {\n  code: 'ERR_MODULE_NOT_FOUND'\n}\n\nNode.js v23.9.0\nfile:///Users/nbbaier/.npm/_npx/234164726e649089/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:93\n        const error = new McpError(ErrorCode.ConnectionClosed, \"Connection closed\");\n                      ^\n\nMcpError: MCP error -32000: Connection closed\n    at Client._onclose (file:///Users/nbbaier/.npm/_npx/234164726e649089/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:93:23)\n    at _transport.onclose (file:///Users/nbbaier/.npm/_npx/234164726e649089/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:68:18)\n    at ChildProcess.<anonymous> (file:///Users/nbbaier/.npm/_npx/234164726e649089/node_modules/@modelcontextprotocol/sdk/dist/esm/client/stdio.js:85:77)\n    at ChildProcess.emit (node:events:507:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at ChildProcess._handle.onexit (node:internal/child_process:305:5) {\n  code: -32000,\n  data: undefined\n}\n\nNode.js v23.9.0\n```", "comments_url": "https://api.github.com/repos/punkpeye/fastmcp/issues/17/comments", "author": "nbbaier", "comments": [{"user": "nbbaier", "created_at": "2025-03-09T18:30:50Z", "body": "For reference, this is my `src/server.ts`:\n\n```ts\nimport { FastMCP } from \"fastmcp\";\nimport { z } from \"zod\";\n\nconst server = new FastMCP({\n  name: \"Addition\",\n  version: \"1.0.0\",\n});\n\nserver.addTool({\n  name: \"add\",\n  description: \"Add two numbers\",\n  parameters: z.object({\n    a: z.number(),\n    b: z.number(),\n  }),\n  execute: async (args) => {\n    return String(args.a + args.b);\n  },\n});\n\nserver.start({\n  transportType: \"stdio\",\n});\n\n```"}, {"user": "punkpeye", "created_at": "2025-03-09T21:59:30Z", "body": "I believe this was just a badly resolved dependency. If you update your dependencies and try again, it should be fixed."}, {"user": "nbbaier", "created_at": "2025-03-10T06:18:48Z", "body": "Yeah that worked great, thanks!"}], "satisfaction_conditions": ["A solution that resolves the dependency error for mcp-proxy", "A straightforward fix that allows the user to run their FastMCP server", "A solution that addresses the dependency resolution without requiring code changes"], "_classification": {"category": "Can be dockerized without any issue", "timestamp": "2025-04-14 01:00:57"}, "dockerfile": "FROM node:20-slim\n\n# Set working directory\nWORKDIR /app\n\n# Install necessary tools\nRUN apt-get update && \\\n    apt-get install -y git && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Clone the repository and checkout specific commit\nRUN git clone https://github.com/punkpeye/fastmcp.git . && \\\n    git checkout 1314f06919e1f20b725d648390336ce4afe16a23\n\n# Install pnpm (as used in the project)\nRUN npm install -g pnpm@9\n\n# Install project dependencies\nRUN pnpm install\n\n# Build the project\nRUN pnpm build\n\n# This Dockerfile sets up an environment with:\n# 1. Node.js 20 as the base image\n# 2. Git installed to clone the repository\n# 3. The fastmcp repository cloned and checked out to the specific commit\n# 4. PNPM installed (as used in the project workflows)\n# 5. Project dependencies installed\n# 6. Project built and ready to use", "language": "typescript"}
{"number": 43, "title": "Add Custom Edge Sorting with Predicate Function added edgeRetrieval.cpp", "created_at": "2025-01-15T14:37:41Z", "closed_at": "2025-01-18T14:58:18Z", "commit_id": "b60fe8c2f7a4dcd67abdbde03827dcd37ff4e999", "labels": ["enhancement", "ADVANCED", "SWOC"], "url": "https://github.com/SharonIV0x86/Appledore/pull/43", "body": "closes: #34 \r\n\r\nTested and works", "comments_url": "https://api.github.com/repos/SharonIV0x86/Appledore/issues/43/comments", "author": "ash01825", "comments": [{"user": "SharonIV0x86", "created_at": "2025-01-16T10:00:26Z", "body": "@ash01825 I am not able to edit these files in the PR, maybe you have disabled the option that allows maintainers to edit the code. \r\n\r\nThere are a few changes need to be done, the first one is to include ``<functional>`` header in ``GraphMatrix.h`` without which ``std::function`` wont work.\r\nSecond one is to add a check in your ``getAllEdges`` function, if the graph is unweighted you cannot really return anything, so throw an exception at that point.\r\n\r\nIf you can enable the option that allows me to edit the code in the PR then it will be good, as i have to do some changes in example and the function also."}, {"user": "ash01825", "created_at": "2025-01-16T10:12:18Z", "body": "shouldn't getAllEdges return all existing Edges for Unweighted Graphs too?"}, {"user": "SharonIV0x86", "created_at": "2025-01-16T10:26:41Z", "body": "> shouldn't getAllEdges return all existing Edges for Unweighted Graphs too?\r\n\r\nInteresting, well yes it can, but in the returned tuple \r\n```cpp\r\nstd::vector<std::tuple<VertexType, VertexType, EdgeType>\r\n```\r\nthe ``EdgeType`` will be ``UnweightedG`` and user cannot actually use ``UnweightedG`` anywhere, maybe there is a way we can return \r\nthis for weighted graphs\r\n```cpp\r\nstd::vector<std::tuple<VertexType, VertexType, EdgeType>\r\n```\r\nand this for unweighted graphs?\r\n```cpp\r\nstd::vector<std::tuple<VertexType, VertexType>\r\n```"}, {"user": "SharonIV0x86", "created_at": "2025-01-16T10:46:18Z", "body": "@ash01825 Possibly we can utilize ``std::variant`` but will require more code. although this is not that important as of now.\r\n\r\n> > shouldn't getAllEdges return all existing Edges for Unweighted Graphs too?\r\n> \r\n> Interesting, well yes it can, but in the returned tuple\r\n> \r\n> ```c++\r\n> std::vector<std::tuple<VertexType, VertexType, EdgeType>\r\n> ```\r\n> \r\n> the `EdgeType` will be `UnweightedG` and user cannot actually use `UnweightedG` anywhere, maybe there is a way we can return this for weighted graphs\r\n> \r\n> ```c++\r\n> std::vector<std::tuple<VertexType, VertexType, EdgeType>\r\n> ```\r\n> \r\n> and this for unweighted graphs?\r\n> \r\n> ```c++\r\n> std::vector<std::tuple<VertexType, VertexType>\r\n> ```\r\n\r\n"}, {"user": "SharonIV0x86", "created_at": "2025-01-17T05:22:48Z", "body": "@ash01825 any update?"}, {"user": "ash01825", "created_at": "2025-01-17T08:12:16Z", "body": "yeah sorry was out yesterday yeah I've made the changes"}, {"user": "SharonIV0x86", "created_at": "2025-01-17T08:23:22Z", "body": "> yeah sorry was out yesterday yeah I've made the changes\r\n\r\nIts fine no issues, the thing i am concerned about is that i want to make some changes to your current example file in this PR, but i dont have the permission to do so as you must have unchecked the ``allow maintainers to edit files`` while making this PR due to which i am not able to edit the files. \r\n\r\nSo either you give me permission to edit the code or i'll have to make those changes after merging the PR, your call."}, {"user": "ash01825", "created_at": "2025-01-17T11:22:39Z", "body": "Yeah I've turned on the allow edit my maintainers👍"}, {"user": "SharonIV0x86", "created_at": "2025-01-17T12:39:04Z", "body": "@ash01825 I have approved the changes and PR will be merged in sometime. Till then you are free to work on some other issue."}, {"user": "SharonIV0x86", "created_at": "2025-01-18T14:58:53Z", "body": "@ash01825 The PR is merged, and points are assigned to you. Thank you for contributing, kindly star ⭐ the repository as it shows appreciation to repository maintainers for their work."}], "satisfaction_conditions": ["Inclusion of necessary header files for the implementation", "Proper handling of edge retrieval for both weighted and unweighted graphs", "Enabling maintainer edit permissions on the PR", "Functional implementation that passes testing", "Addressing all feedback from code review"], "_classification": {"category": "Can be dockerized without any issue", "timestamp": "2025-04-14 01:00:21"}, "dockerfile": "FROM ubuntu:22.04\n\n# Set noninteractive installation to avoid prompts\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install dependencies\nRUN apt-get update && apt-get install -y \\\n    git \\\n    build-essential \\\n    cmake \\\n    g++ \\\n    make \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Create a working directory\nWORKDIR /app\n\n# Clone the repository and checkout the specific commit\nRUN git clone https://github.com/SharonIV0X86/Appledore.git && \\\n    cd Appledore && \\\n    git checkout b60fe8c2f7a4dcd67abdbde03827dcd37ff4e999\n\n# Set up a build directory\nWORKDIR /app/Appledore/build\n\n# Generate build system with CMake if there's a CMakeLists.txt, otherwise prepare for manual build\nRUN if [ -f ../CMakeLists.txt ]; then \\\n        cmake ..; \\\n    else \\\n        echo \"No CMakeLists.txt found. The project may require manual build.\"; \\\n        mkdir -p include examples; \\\n    fi\n\n# Build the project if it has a CMakeLists.txt\nRUN if [ -f ../CMakeLists.txt ]; then \\\n        make; \\\n    else \\\n        echo \"Project ready for manual compilation.\"; \\\n    fi\n\n# Set the working directory back to the project root\nWORKDIR /app/Appledore\n\n# The container is now ready with the project built or prepared for building\n# Users can compile examples or work with the library headers as needed\nCMD [\"/bin/bash\"]", "language": "c++"}
{"number": 1, "title": "Cannot remove plates from Known Plates Dashboard", "created_at": "2024-11-18T15:07:37Z", "closed_at": "2024-11-18T18:28:00Z", "commit_id": "95ee6d78b3c5f4466defc24c9212c6596125261b", "labels": [], "url": "https://github.com/algertc/ALPR-Database/issues/1", "body": "Running on Linux Docker with the latest repo changes.\r\n\r\nTested in both Chrome and Safari.\r\n\r\nClicking on the delete button within the table of known plates doesn't delete the plate.\r\n\r\nConsole Log:\r\n\r\n```Failed to remove from known plates: ReferenceError: removeFromKnownPlates is not defined```", "comments_url": "https://api.github.com/repos/algertc/ALPR-Database/issues/1/comments", "author": "TinyShark", "comments": [{"user": "algertc", "created_at": "2024-11-18T18:28:00Z", "body": "Thank you. Fix pushed. \r\n\r\n`docker compose down`, then `docker compose up -d` should fix. If not, `docker pull algertc/alpr-dashboard` and that should pull the latest version."}, {"user": "TinyShark", "created_at": "2024-11-19T00:11:27Z", "body": "pulling the new image got it to work. Known plates are being removed correctly now.\r\n\r\nMany thanks!"}], "satisfaction_conditions": ["A solution that fixes the 'removeFromKnownPlates is not defined' error", "Clear instructions on how to apply the fix to their Docker environment", "Restoration of the ability to remove plates from the Known Plates Dashboard"], "_classification": {"category": "Can be dockerized without any issue", "timestamp": "2025-04-14 01:01:39"}, "dockerfile": "FROM node:18-bullseye AS builder\n\n# Set working directory\nWORKDIR /app\n\n# Clone the repository and checkout specific commit\nRUN apt-get update && apt-get install -y git && \\\n    git clone https://github.com/algertc/ALPR-Database.git . && \\\n    git checkout 95ee6d78b3c5f4466defc24c9212c6596125261b\n\n# Copy package files and install dependencies\n# Force the install to proceed despite errors\nRUN npm install --legacy-peer-deps\n\n# Build the application\nRUN npm run build\n\n# Create the production image\nFROM node:18-bullseye\n\n# Set working directory\nWORKDIR /app\n\n# Copy built assets and dependencies from builder stage\nCOPY --from=builder /app/.next ./.next\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/public ./public\nCOPY --from=builder /app/package.json ./package.json\nCOPY --from=builder /app/next.config.js ./next.config.js\n\n# Create config and auth directories to persist data\nRUN mkdir -p /app/config /app/auth\nVOLUME [\"/app/config\", \"/app/auth\"]\n\n# Copy specific files needed for runtime\nCOPY --from=builder /app/schema.sql ./schema.sql\nCOPY --from=builder /app/lib ./lib\nCOPY --from=builder /app/middleware.js ./middleware.js\nCOPY --from=builder /app/app ./app\nCOPY --from=builder /app/components ./components\nCOPY --from=builder /app/hooks ./hooks\n\n# Expose the application port\nEXPOSE 3000\n\n# Set environment variables\nENV NODE_ENV=production\n\n# Command to run the application\nCMD [\"npm\", \"start\"]", "language": "javascript"}
{"number": 43, "title": "Add Custom Edge Sorting with Predicate Function added edgeRetrieval.cpp", "created_at": "2025-01-15T14:37:41Z", "closed_at": "2025-01-18T14:58:18Z", "commit_id": "b60fe8c2f7a4dcd67abdbde03827dcd37ff4e999", "labels": ["enhancement", "ADVANCED", "SWOC"], "url": "https://github.com/SharonIV0x86/Appledore/pull/43", "body": "closes: #34 \r\n\r\nTested and works", "comments_url": "https://api.github.com/repos/SharonIV0x86/Appledore/issues/43/comments", "author": "ash01825", "comments": [{"user": "SharonIV0x86", "created_at": "2025-01-16T10:00:26Z", "body": "@ash01825 I am not able to edit these files in the PR, maybe you have disabled the option that allows maintainers to edit the code. \r\n\r\nThere are a few changes need to be done, the first one is to include ``<functional>`` header in ``GraphMatrix.h`` without which ``std::function`` wont work.\r\nSecond one is to add a check in your ``getAllEdges`` function, if the graph is unweighted you cannot really return anything, so throw an exception at that point.\r\n\r\nIf you can enable the option that allows me to edit the code in the PR then it will be good, as i have to do some changes in example and the function also."}, {"user": "ash01825", "created_at": "2025-01-16T10:12:18Z", "body": "shouldn't getAllEdges return all existing Edges for Unweighted Graphs too?"}, {"user": "SharonIV0x86", "created_at": "2025-01-16T10:26:41Z", "body": "> shouldn't getAllEdges return all existing Edges for Unweighted Graphs too?\r\n\r\nInteresting, well yes it can, but in the returned tuple \r\n```cpp\r\nstd::vector<std::tuple<VertexType, VertexType, EdgeType>\r\n```\r\nthe ``EdgeType`` will be ``UnweightedG`` and user cannot actually use ``UnweightedG`` anywhere, maybe there is a way we can return \r\nthis for weighted graphs\r\n```cpp\r\nstd::vector<std::tuple<VertexType, VertexType, EdgeType>\r\n```\r\nand this for unweighted graphs?\r\n```cpp\r\nstd::vector<std::tuple<VertexType, VertexType>\r\n```"}, {"user": "SharonIV0x86", "created_at": "2025-01-16T10:46:18Z", "body": "@ash01825 Possibly we can utilize ``std::variant`` but will require more code. although this is not that important as of now.\r\n\r\n> > shouldn't getAllEdges return all existing Edges for Unweighted Graphs too?\r\n> \r\n> Interesting, well yes it can, but in the returned tuple\r\n> \r\n> ```c++\r\n> std::vector<std::tuple<VertexType, VertexType, EdgeType>\r\n> ```\r\n> \r\n> the `EdgeType` will be `UnweightedG` and user cannot actually use `UnweightedG` anywhere, maybe there is a way we can return this for weighted graphs\r\n> \r\n> ```c++\r\n> std::vector<std::tuple<VertexType, VertexType, EdgeType>\r\n> ```\r\n> \r\n> and this for unweighted graphs?\r\n> \r\n> ```c++\r\n> std::vector<std::tuple<VertexType, VertexType>\r\n> ```\r\n\r\n"}, {"user": "SharonIV0x86", "created_at": "2025-01-17T05:22:48Z", "body": "@ash01825 any update?"}, {"user": "ash01825", "created_at": "2025-01-17T08:12:16Z", "body": "yeah sorry was out yesterday yeah I've made the changes"}, {"user": "SharonIV0x86", "created_at": "2025-01-17T08:23:22Z", "body": "> yeah sorry was out yesterday yeah I've made the changes\r\n\r\nIts fine no issues, the thing i am concerned about is that i want to make some changes to your current example file in this PR, but i dont have the permission to do so as you must have unchecked the ``allow maintainers to edit files`` while making this PR due to which i am not able to edit the files. \r\n\r\nSo either you give me permission to edit the code or i'll have to make those changes after merging the PR, your call."}, {"user": "ash01825", "created_at": "2025-01-17T11:22:39Z", "body": "Yeah I've turned on the allow edit my maintainers👍"}, {"user": "SharonIV0x86", "created_at": "2025-01-17T12:39:04Z", "body": "@ash01825 I have approved the changes and PR will be merged in sometime. Till then you are free to work on some other issue."}, {"user": "SharonIV0x86", "created_at": "2025-01-18T14:58:53Z", "body": "@ash01825 The PR is merged, and points are assigned to you. Thank you for contributing, kindly star ⭐ the repository as it shows appreciation to repository maintainers for their work."}], "satisfaction_conditions": ["Inclusion of necessary header files for the implementation", "Proper handling of edge retrieval for both weighted and unweighted graphs", "Enabling maintainer edit permissions on the PR", "Functional implementation that passes testing", "Addressing all feedback from code review"], "_classification": {"category": "Can be dockerized without any issue", "timestamp": "2025-04-14 01:00:21"}, "dockerfile": "FROM ubuntu:22.04\n\n# Set noninteractive installation to avoid prompts\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install dependencies\nRUN apt-get update && apt-get install -y \\\n    git \\\n    build-essential \\\n    cmake \\\n    g++ \\\n    make \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Create a working directory\nWORKDIR /app\n\n# Clone the repository and checkout the specific commit\nRUN git clone https://github.com/SharonIV0X86/Appledore.git && \\\n    cd Appledore && \\\n    git checkout b60fe8c2f7a4dcd67abdbde03827dcd37ff4e999\n\n# Set up a build directory\nWORKDIR /app/Appledore/build\n\n# Generate build system with CMake if there's a CMakeLists.txt, otherwise prepare for manual build\nRUN if [ -f ../CMakeLists.txt ]; then \\\n        cmake ..; \\\n    else \\\n        echo \"No CMakeLists.txt found. The project may require manual build.\"; \\\n        mkdir -p include examples; \\\n    fi\n\n# Build the project if it has a CMakeLists.txt\nRUN if [ -f ../CMakeLists.txt ]; then \\\n        make; \\\n    else \\\n        echo \"Project ready for manual compilation.\"; \\\n    fi\n\n# Set the working directory back to the project root\nWORKDIR /app/Appledore\n\n# The container is now ready with the project built or prepared for building\n# Users can compile examples or work with the library headers as needed\nCMD [\"/bin/bash\"]", "language": "c++"}