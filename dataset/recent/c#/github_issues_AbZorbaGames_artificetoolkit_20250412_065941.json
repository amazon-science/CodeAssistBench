[
  {
    "number": 24,
    "title": "Add SortAttribute, .gitignore and update documentation üî®",
    "created_at": "2025-03-20T02:09:52Z",
    "closed_at": "2025-03-28T11:56:35Z",
    "commit_id": "2de3e83635f89f4da2f486114a4622feef6121ba",
    "labels": [],
    "url": "https://github.com/AbZorbaGames/artificetoolkit/pull/24",
    "body": "Hey @ZackPer,  \r\n\r\n**What's new:**  \r\n- Added `SortAttribute` to order Inspector fields   \r\n- Updated docs with sword example ‚öîÔ∏è  \r\n- Added `.gitignore` for IDE folders üö´  \r\n\r\n**Quick question:**  \r\n\r\nIn `ArtificeInspector`, this line (12), gets uncommented by Unity when I clone the repo üòÖ. \r\n```csharp  \r\n// [CustomEditor(typeof(Object), true), CanEditMultipleObjects]  \r\n```\r\n\r\nMeant to be a `///` comment?\r\n",
    "comments_url": "https://api.github.com/repos/AbZorbaGames/artificetoolkit/issues/24/comments",
    "author": "exejutable",
    "comments": [
      {
        "user": "ZackPer",
        "created_at": "2025-03-20T14:10:23Z",
        "body": "Regarding this line,\r\n\r\n```c#\r\n// [CustomEditor(typeof(Object), true), CanEditMultipleObjects]  \r\n```\r\n\r\nThe intended use for Artifice is to add it to your project through git. That means the source code is inside unity's the Library folder which is always under gitignore. \r\n\r\nSo we tried to utilize this to be able to turn on and off the ArtificeInspector completely, by removing the attribute which applies it to the inspector. If someone wants to download and add it manually, he should gitignore this file specifically to be able to turn on/off the inspector.\r\n\r\nSo when working on artifice, the developer should completely ignore this script üêµ \r\n\r\nThis is not documented, so I will put a task for it to update it."
      },
      {
        "user": "ZackPer",
        "created_at": "2025-03-20T14:11:41Z",
        "body": "Also great job @exejutable ! Your PR was well structured and documented. After resolving the truly minor comments I added, we can pull and merge!"
      },
      {
        "user": "exejutable",
        "created_at": "2025-03-20T21:18:07Z",
        "body": "Hi @ZackPer ,\r\n\r\nThanks for the explanation! \r\n\r\n**About the `//` behavior:**\r\nWhen adding Artifice as a local package (from disk), Unity removes them automatically. Switching to `///` fixes this issue, as Unity preserves triple-slash comments.\r\n\r\n**About the \"minor comments\":**\r\nYou mentioned resolving \"truly minor comments,\" but I don‚Äôt see them in the PR. Did you mean:\r\n\r\n1. You‚Äôll handle them?\r\n2. Or should I address them?\r\n\r\nLet me know so I can help out! "
      },
      {
        "user": "ZackPer",
        "created_at": "2025-03-21T08:52:47Z",
        "body": "Good morning @exejutable \r\n\r\nI see what you mean know with the `//`. It feels weird that I havent really noticed it by now but I confirmed it now haha. I will add it on a later patch so dont bother with it for now. \r\n\r\nIt seems I never submitted my review, I apologize. New to the Github UI, I have mostly used GitLab until now. You should be able to see them now.\r\n\r\nOne last comment, you should also progress the package.json version to 1.3.2\r\n\r\nThanks again!"
      },
      {
        "user": "exejutable",
        "created_at": "2025-03-24T20:48:26Z",
        "body": "Hi @ZackPer I removed the `.gitignore` added the `///` to the `ArtificeInspector` also updated the package to `1.3.2`"
      },
      {
        "user": "ZackPer",
        "created_at": "2025-03-28T11:39:19Z",
        "body": "Hello @exejutable !\r\n\r\nSorry for the delay but I was on my day-offs ü´£\r\n\r\nSo I made some changes after reviewing the branch.\r\n\r\nFirst of all, I reverted the '//' instead of the '///' because it does not have to do with Unity. Probably, the Artifice_Utilities class was simply removing the '//' because it detected that previously you had enabled the ArtificeToolkit. So long story sort, the Artifice_Utilities which also offers the MenuItem options, enforces the '//' based on whether you want to use Artifice or not. This way, your preference is kept even when you update the ArtificeToolkit version.\r\n\r\nSecondly, I made a small optimization to the sorting utility method. I added a boolean to skip the OrderBy call if no sorting is needed, so we keep the O(n) time complexity for all cases that we dont have any sorting. I know the OrderBy has the best case of O(n) eitherway, but it feels better to enforce it so we stay agnostic of the sorting algorithm.\r\n\r\nLastly, I changed the default sorting order value (if no sort attribute was used at a specific property, but we need sorting because of another attribute), to be 0. This way, if you want to make a property which appears first in your script, appear last in the inspector, you dont need to put [Sort] to every other property. This is also the way Odin does it!\r\n\r\nWith this changes, I will probably squash and merge soon. Let me know your thoughts when you see this.\r\n"
      },
      {
        "user": "exejutable",
        "created_at": "2025-04-08T23:57:01Z",
        "body": "Hi @ZackPer ,\r\n\r\nNo worries at all about the delay‚Äîhope you had a great time on your day off!\r\n\r\nThanks for the detailed explanation and the changes. Everything looks good to me! The only thing that caught my eye was the shift from explicit typing to var, but that‚Äôs just me being a typing psychopath lol."
      },
      {
        "user": "ZackPer",
        "created_at": "2025-04-09T06:22:26Z",
        "body": "Hello @exejutable \r\n\r\nThe whole project uses 'var' instead of explicitly defining types. Probably there are some cases where this is impossible if no value can be assigned to it yet, until some logic actually does it. \r\n\r\nBeing a typing freak is a great quality for a programmer :) "
      }
    ],
    "satisfaction_conditions": [
      "Clear explanation of the comment behavior in ArtificeInspector",
      "Guidance on how to properly handle the PR review process",
      "Information about version numbering requirements for the package",
      "Feedback on their code contribution quality",
      "Technical rationale for maintainer's code changes"
    ],
    "_classification": {
      "category": "Does not need build environment",
      "timestamp": "2025-04-14 01:00:36"
    }
  }
]