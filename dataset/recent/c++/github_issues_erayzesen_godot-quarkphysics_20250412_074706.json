[
  {
    "number": 34,
    "title": "Change QMeshPolygonNode polygon radius in code",
    "created_at": "2025-02-02T18:27:52Z",
    "closed_at": "2025-02-19T14:23:40Z",
    "commit_id": "7afa037049f660257df8e9e9399ad74740596663",
    "labels": [],
    "url": "https://github.com/erayzesen/godot-quarkphysics/issues/34",
    "body": "I am trying to change the polygon radius in code for a softbody. Is seems that the function: set_polygon_radius(value) does not work. I tested it like this:\n```\nextends QSoftBodyNode\n\nvar expanded_size = 100\nvar normal_size= 40\n\nfunc _physics_process(delta: float) -> void:            \n\tif Input.is_action_pressed(\"expand\"):\n\t\t$Mesh.set_polygon_radius(expanded_size)  #$Mesh is a QMeshPolygonNode\n\telse:\n\t\t$Mesh.set_polygon_radius(normal_size)\n\n```\nThis does not work too\n```\nextends QSoftBodyNode\n\nvar expanded_size = 100\nvar normal_size = 40\n\nfunc _physics_process(delta: float) -> void:            \n\tif Input.is_action_pressed(\"expand\"):\n\t\t$Mesh.polygon_radius = expanded_size\n\telse:\n\t\t$Mesh.polygon_radius = normal_size\n\n```\n\nI know the code isnt efficent, its just for demonstration",
    "comments_url": "https://api.github.com/repos/erayzesen/godot-quarkphysics/issues/34/comments",
    "author": "WilleIshere",
    "comments": [
      {
        "user": "erayzesen",
        "created_at": "2025-02-02T22:44:05Z",
        "body": "Hi @WilleIshere. Objects like QMeshCircleNode, QMeshPolygonNode, and QMeshRectNode are nodes that generate the target mesh when added to the scene based on your settings. We do something similar with QMeshAdvancedNode using an editor plugin.\n\nIf a QMeshNode object is under a QSoftBodyNode, its particles move individually.  Therefore, if you want to control the particles during the simulation, you need to use methods related to the particles directly. In the example you provided, you would need to modify both the local,global positions of the particles and the spring properties that enforce distance constraints between them."
      },
      {
        "user": "WilleIshere",
        "created_at": "2025-02-03T09:38:33Z",
        "body": "Thanks, Can you give an example how this can be done?"
      },
      {
        "user": "erayzesen",
        "created_at": "2025-02-03T16:58:38Z",
        "body": "Of course. \n\n```\nfunc _process(delta: float) -> void:\n\tvar mesh:QMeshNode=$QMeshPolygonNode\n\tif(Input.is_action_pressed(\"ui_up\")) :\n\t\tfor i in range(mesh.get_particle_count()) :\n\t\t\tvar p:QParticleObject=mesh.get_particle_at(i)\n\t\t\tp.set_position(p.get_position()+ p.get_position().normalized() )\n\t\tfor i in range(mesh.get_spring_count()) :\n\t\t\tvar s:QSpringObject=mesh.get_spring_at(i)\n\t\t\tvar current_local_distance=s.get_particle_b().get_position()-s.get_particle_a().get_position()\n\t\t\tvar new_length=current_local_distance.length()\n\t\t\ts.set_length(new_length)\n```\n\nThis code should position the particles 1 unit outward from the center each time the up arrow key is pressed and update the springs accordingly."
      },
      {
        "user": "WilleIshere",
        "created_at": "2025-02-03T18:33:53Z",
        "body": "Thank you so much!"
      }
    ],
    "satisfaction_conditions": [
      "A working code example showing how to dynamically resize a QMeshPolygonNode in a QSoftBodyNode",
      "An explanation of why the original approach didn't work",
      "Guidance on the correct approach to manipulate soft body meshes during runtime"
    ],
    "_classification": {
      "category": "Does not need build environment",
      "timestamp": "2025-04-14 01:01:26"
    }
  }
]