[
  {
    "number": 19,
    "title": "[BUG] Cava config as template doesn't parse correctly and no errors are shown.",
    "created_at": "2025-04-10T13:25:24Z",
    "closed_at": "2025-04-10T15:13:45Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/danihek/hellwal/issues/19",
    "body": "The cava config does not parse correctly and results in a incorrect output file.\n\n\nTEMPLATE:\n```\n## Configuration file for CAVA. Default values are commented out. Use either ';' or '#' for commenting.\n\n\n[general]\n\n# Smoothing mode. Can be 'normal', 'scientific' or 'waves'. DEPRECATED as of 0.6.0\n; mode = normal\n\n# Accepts only non-negative values.\nframerate = 60\n\n# 'autosens' will attempt to decrease sensitivity if the bars peak. 1 = on, 0 = off\n# new as of 0.6.0 autosens of low values (dynamic range)\n# 'overshoot' allows bars to overshoot (in % of terminal height) without initiating autosens. DEPRECATED as of 0.6.0\n; autosens = 1\n; overshoot = 20\n\n# Manual sensitivity in %. If autosens is enabled, this will only be the initial value.\n# 200 means double height. Accepts only non-negative values.\n; sensitivity = 100\n\n# The number of bars (0-200). 0 sets it to auto (fill up console).\n# Bars' width and space between bars in number of characters.\n; bars = 0\n; bar_width = 2\n; bar_spacing = 1\n\n# For SDL width and space between bars is in pixels, defaults are:\n; bar_width = 20\n; bar_spacing = 5\n\n\n# Lower and higher cutoff frequencies for lowest and highest bars\n# the bandwidth of the visualizer.\n# Note: there is a minimum total bandwidth of 43Mhz x number of bars.\n# Cava will automatically increase the higher cutoff if a too low band is specified.\n; lower_cutoff_freq = 50\n; higher_cutoff_freq = 10000\n\n\n# Seconds with no input before cava goes to sleep mode. Cava will not perform FFT or drawing and\n# only check for input once per second. Cava will wake up once input is detected. 0 = disable.\n; sleep_timer = 0\n\n\n[input]\n\n# Audio capturing method. Possible methods are: 'pulse', 'alsa', 'fifo', 'sndio' or 'shmem'\n# Defaults to 'pulse', 'alsa' or 'fifo', in that order, dependent on what support cava was built with.\n#\n# All input methods uses the same config variable 'source'\n# to define where it should get the audio.\n#\n# For pulseaudio 'source' will be the source. Default: 'auto', which uses the monitor source of the default sink\n# (all pulseaudio sinks(outputs) have 'monitor' sources(inputs) associated with them).\n#\n# For alsa 'source' will be the capture device.\n# For fifo 'source' will be the path to fifo-file.\n# For shmem 'source' will be /squeezelite-AA:BB:CC:DD:EE:FF where 'AA:BB:CC:DD:EE:FF' will be squeezelite's MAC address\nmethod = pulse\nsource = auto\n\n; method = alsa\n; source = hw:Loopback,1\n\n; method = fifo\n; source = /tmp/mpd.fifo\n; sample_rate = 44100\n; sample_bits = 16\n\n; method = shmem\n; source = /squeezelite-AA:BB:CC:DD:EE:FF\n\n; method = portaudio\n; source = auto\n\n\n[output]\n\n# Output method. Can be 'ncurses', 'noncurses', 'raw' or 'sdl'.\n# 'noncurses' uses a custom framebuffer technique and prints only changes\n# from frame to frame in the terminal. 'ncurses' is default if supported.\n#\n# 'raw' is an 8 or 16 bit (configurable via the 'bit_format' option) data\n# stream of the bar heights that can be used to send to other applications.\n# 'raw' defaults to 200 bars, which can be adjusted in the 'bars' option above.\n#\n# 'sdl' uses the Simple DirectMedia Layer to render in a graphical context.\n; method = ncurses\n\n# Visual channels. Can be 'stereo' or 'mono'.\n# 'stereo' mirrors both channels with low frequencies in center.\n# 'mono' outputs left to right lowest to highest frequencies.\n# 'mono_option' set mono to either take input from 'left', 'right' or 'average'.\n; channels = stereo\n; mono_option = average\n\n# Raw output target. A fifo will be created if target does not exist.\n; raw_target = /dev/stdout\n\n# Raw data format. Can be 'binary' or 'ascii'.\n; data_format = binary\n\n# Binary bit format, can be '8bit' (0-255) or '16bit' (0-65530).\n; bit_format = 16bit\n\n# Ascii max value. In 'ascii' mode range will run from 0 to value specified here\n; ascii_max_range = 1000\n\n# Ascii delimiters. In ascii format each bar and frame is separated by a delimiters.\n# Use decimal value in ascii table (i.e. 59 = ';' and 10 = '\\n' (line feed)).\n; bar_delimiter = 59\n; frame_delimiter = 10\n\n# sdl window size and position. -1,-1 is centered.\n; sdl_width = 1000\n; sdl_height = 500\n; sdl_x = -1\n; sdl_y= -1\n\n[color]\n\n# Colors can be one of seven predefined: black, blue, cyan, green, magenta, red, white, yellow.\n# Or defined by hex code '#xxxxxx' (hex code must be within ''). User defined colors requires\n# ncurses output method and a terminal that can change color definitions such as Gnome-terminal or rxvt.\n# if supported, ncurses mode will be forced on if user defined colors are used.\n# default is to keep current terminal color\n; background = default\n; foreground = default\n\n# SDL only support hex code colors, these are the default:\n; background = '#111111'\n; foreground = '#33cccc'\n\n\n# Gradient mode, only hex defined colors (and thereby ncurses mode) are supported,\n# background must also be defined in hex  or remain commented out. 1 = on, 0 = off.\n# You can define as many as 8 different colors. They range from bottom to top of screen\n# In the [color] section\n\n[color]\n\ngradient = 1\n\ngradient_color_1 = '#%%color8.hex%%'\ngradient_color_2 = '#%%color9.hex%%'\ngradient_color_3 = '#%%color3.hex%%'\ngradient_color_4 = '#%%color4.hex%%'\ngradient_color_5 = '#%%color5.hex%%'\ngradient_color_6 = '#%%color6.hex%%'\ngradient_color_7 = '#%%color13.hex%%'\ngradient_color_8 = '#%%color7.hex%%'\n\n\n\n[smoothing]\n\n# Percentage value for integral smoothing. Takes values from 0 - 100.\n# Higher values means smoother, but less precise. 0 to disable.\n; integral = 77\n\n# Disables or enables the so-called \"Monstercat smoothing\" with or without \"waves\". Set to 0 to disable.\n; monstercat = 0\n; waves = 0\n\n# Set gravity percentage for \"drop off\". Higher values means bars will drop faster.\n# Accepts only non-negative values. 50 means half gravity, 200 means double. Set to 0 to disable \"drop off\".\n; gravity = 100\n\n\n# In bar height, bars that would have been lower that this will not be drawn.\n; ignore = 0\n\n\n[eq]\n\n# This one is tricky. You can have as much keys as you want.\n# Remember to uncomment more then one key! More keys = more precision.\n# Look at readme.md on github for further explanations and examples.\n; 1 = 1 # bass\n; 2 = 1\n; 3 = 1 # midtone\n; 4 = 1\n; 5 = 1 # treble\n```\n\n\nResult:\n```\n## Configuration file for CAVA. Default values are commented out. Use either ';' or '#' for commenting.\n\n\n[general]\n\n# Smoothing mode. Can be 'normal', 'scientific' or 'waves'. DEPRECATED as of 0.6.0\n; mode = normal\n\n# Accepts only non-negative values.\nframerate = 60\n\n# 'autosens' will attempt to decrease sensitivity if the bars peak. 1 = on, 0 = off\n# new as of 0.6.0 autosens of low values (dynamic range)\n# 'overshoot' allows bars to overshoot (in 1c1c53'\ngradient_color_2 = '#242461'\ngradient_color_3 = '#52495c'\ngradient_color_4 = '#4c4970'\ngradient_color_5 = '#9e7aa2'\ngradient_color_6 = '#a980a2'\ngradient_color_7 = '#c598ca'\ngradient_color_8 = '#d3c2e8'\n\n\n\n[smoothing]\n\n# Percentage value for integral smoothing. Takes values from 0 - 100.\n# Higher values means smoother, but less precise. 0 to disable.\n; integral = 77\n\n# Disables or enables the so-called \"Monstercat smoothing\" with or without \"waves\". Set to 0 to disable.\n; monstercat = 0\n; waves = 0\n\n# Set gravity percentage for \"drop off\". Higher values means bars will drop faster.\n# Accepts only non-negative values. 50 means half gravity, 200 means double. Set to 0 to disable \"drop off\".\n; gravity = 100\n\n\n# In bar height, bars that would have been lower that this will not be drawn.\n; ignore = 0\n\n\n[eq]\n\n# This one is tricky. You can have as much keys as you want.\n# Remember to uncomment more then one key! More keys = more precision.\n# Look at readme.md on github for further explanations and examples.\n; 1 = 1 # bass\n; 2 = 1\n; 3 = 1 # midtone\n; 4 = 1\n; 5 = 1 # treble\n```",
    "comments_url": "https://api.github.com/repos/danihek/hellwal/issues/19/comments",
    "author": "SherLock707",
    "comments": [
      {
        "user": "danihek",
        "created_at": "2025-04-10T13:59:31Z",
        "body": "okay there is a bug for some reason - it dont like % sign commented in line 14 and 18, if you remove that it should work perfectly, it worked for me.\n\nanother bug to TODO I guess - thanks for reporting that"
      },
      {
        "user": "SherLock707",
        "created_at": "2025-04-10T14:16:21Z",
        "body": "thanks! your fix worked."
      }
    ],
    "satisfaction_conditions": [
      "A solution that fixes the template parsing issue with the cava configuration file",
      "An explanation of what causes the parsing error in the cava config template",
      "A practical workaround that allows the configuration to parse correctly"
    ],
    "_classification": {
      "category": "Can be dockerized without any issue",
      "timestamp": "2025-04-14 01:01:34"
    }
  }
]