[
  {
    "number": 1162,
    "title": "AttributeError: type object 'RtfConverter' has no attribute 'register_converters'",
    "created_at": "2025-03-28T21:07:31Z",
    "closed_at": "2025-03-31T14:00:56Z",
    "labels": [],
    "url": "https://github.com/microsoft/markitdown/issues/1162",
    "body": "I have the following plugin:\n```python\n# src/markdown/_rtf_converter\n\nimport re\nfrom striprtf import striprtf\nfrom typing import BinaryIO, Any\nfrom markitdown import (\n    DocumentConverter, \n    DocumentConverterResult, \n    StreamInfo, \n    MarkItDown\n)\n\n\n# The version of the plugin interface that this plugin uses. \n# The only supported version is 1 for now.\n__plugin_interface_version__ = 1 \n\n\ndef register_converters(markitdown: MarkItDown, **kwargs):\n    \"\"\"\n    Called during construction of MarkItDown instances to register converters provided by plugins.\n    \"\"\"\n\n    # Simply create and attach an RtfConverter instance\n    markitdown.register_converter(RtfConverter())\n\n\n\nclass RtfConverter(DocumentConverter):\n    def __init__(\n        self\n    ):\n        super().__init__()\n\n    def accepts(\n        self,\n        file_stream: BinaryIO,\n        stream_info: StreamInfo,\n        **kwargs: Any,\n    ) -> bool:\n        \"\"\"\n        Check if the file is an RTF document.\n        RTF files typically start with \"{\\rtf1\" signature.\n        \"\"\"\n        import pdb; pdb.set_trace() \n        # Save the current position\n        current_position = file_stream.tell()\n        \n        # Read first 10 bytes to check for RTF signature\n        header = file_stream.read(10).decode('ascii', errors='ignore')\n        \n        # Restore the original position\n        file_stream.seek(current_position)\n        \n        # Check if the file starts with RTF signature\n        return header.startswith('{\\\\rtf')\n\n    def convert(\n        self,\n        file_stream: BinaryIO,\n        stream_info: StreamInfo,\n        **kwargs: Any,\n    ) -> DocumentConverterResult:\n\n        \"\"\"\n        Convert RTF content to Markdown.\n        \"\"\"\n        # Read the RTF content\n        rtf_content = file_stream.read().decode('ascii', errors='ignore')\n        \n        # Convert RTF to plain text\n        plain_text = striprtf.rtf_to_text(rtf_content)\n        \n        # Basic formatting conversions\n        markdown_text = self._format_as_markdown(plain_text)\n        \n        # Return the conversion result\n        return DocumentConverterResult(\n            markdown=markdown_text,\n        )\n        \n    def _format_as_markdown(self, text: str) -> str:\n        \"\"\"\n        Perform basic formatting to convert plain text to Markdown.\n        This is a simplified conversion that handles common RTF elements.\n        \"\"\"\n        result = text\n        \n        # Handle paragraphs (ensure proper line breaks)\n        result = re.sub(r'\\n\\s*\\n', '\\n\\n', result)\n        \n        # Handle bullet points (often represented as * or \u2022 in RTF)\n        result = re.sub(r'^\\s*[\u2022*]\\s*(.+)$', r'* \\1', result, flags=re.MULTILINE)\n        \n        # Handle numbered lists\n        result = re.sub(r'^\\s*(\\d+)[.)]\\s*(.+)$', r'\\1. \\2', result, flags=re.MULTILINE)\n        \n        # Clean up extra whitespace\n        result = re.sub(r' +', ' ', result)\n        result = re.sub(r'\\n{3,}', '\\n\\n', result)\n        return result.strip()\n```\n\nand  the following pyproject.toml\n\n```\n...\n[project.entry-points.\"markitdown.plugin\"]\nmarkitdown_rtf_plugin = \"src.markdown._rtf_converter:RtfConverter\"\n...\n```\n\nI then install the module with `poetry install`.\n\nWhen I attempt to run \n\n```python\nmd = MarkItDown(enable_plugins=True) # Set to True to enable plugins\nresult = md.convert(\"tests/files/file-sample_100kB.rtf\")\nprint(result.text_content)\n```\n\nI get the following error:\n\n```\nUserWarning: Plugin '<class 'iliad_utils.markdown._rtf_converter.RtfConverter'>' failed to register converters:\nTraceback (most recent call last):\n  File \"/Users/hoangsx/Library/CloudStorage/OneDrive-AbbVieInc(O365)/workspace/projects/iliad-utils/.venv/lib/python3.12/site-packages/markitdown/_markitdown.py\", line 221, in enable_plugins\n    plugin.register_converters(self, **kwargs)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: type object 'RtfConverter' has no attribute 'register_converters'\n\n  warn(f\"Plugin '{plugin}' failed to register converters:\\n{tb}\")\n```\n\nIs there anything I'm doing wrong? Does my plugin class need a `register_converters` method?",
    "comments_url": "https://api.github.com/repos/microsoft/markitdown/issues/1162/comments",
    "author": "shoang22",
    "comments": [
      {
        "user": "afourney",
        "created_at": "2025-03-31T02:35:29Z",
        "body": "Thanks for the report. I'll\nLook into it asap.\n\nBut, register_converters does not need to be in the class... only the package.\n\nTry removing :RtfConverter from entry point in pyproject "
      },
      {
        "user": "shoang22",
        "created_at": "2025-03-31T14:00:56Z",
        "body": "that worked! thanks"
      }
    ],
    "satisfaction_conditions": [
      "Correct configuration of the plugin entry point in pyproject.toml",
      "Understanding of the proper plugin registration mechanism",
      "A solution that resolves the AttributeError without requiring changes to the converter class implementation"
    ],
    "_classification": {
      "category": "Does not need build environment",
      "timestamp": "2025-04-14 01:01:46"
    }
  },
  {
    "number": 149,
    "title": "ValueError: numpy.dtype size changed",
    "created_at": "2024-12-19T15:29:56Z",
    "closed_at": "2024-12-20T00:24:46Z",
    "labels": [],
    "url": "https://github.com/microsoft/markitdown/issues/149",
    "body": "I get the following error trying to convert any pdf to md:\n\n```\n\u276f markitdown notes.pdf > notes.md\nTraceback (most recent call last):\n  File \"/Users/davidwoodburn/.config/python/bin/markitdown\", line 5, in <module>\n    from markitdown.__main__ import main\n  File \"/Users/davidwoodburn/.config/python/lib/python3.12/site-packages/markitdown/__init__.py\", line 5, in <module>\n    from ._markitdown import MarkItDown, FileConversionException, UnsupportedFormatException\n  File \"/Users/davidwoodburn/.config/python/lib/python3.12/site-packages/markitdown/_markitdown.py\", line 22, in <module>\n    import pandas as pd\n  File \"/Users/davidwoodburn/.config/python/lib/python3.12/site-packages/pandas/__init__.py\", line 46, in <module>\n    from pandas.core.api import (\n  File \"/Users/davidwoodburn/.config/python/lib/python3.12/site-packages/pandas/core/api.py\", line 1, in <module>\n    from pandas._libs import (\n  File \"/Users/davidwoodburn/.config/python/lib/python3.12/site-packages/pandas/_libs/__init__.py\", line 18, in <module>\n    from pandas._libs.interval import Interval\n  File \"interval.pyx\", line 1, in init pandas._libs.interval\nValueError: numpy.dtype size changed, may indicate binary incompatibility. Expected 96 from C header, got 88 from PyObject\n```",
    "comments_url": "https://api.github.com/repos/microsoft/markitdown/issues/149/comments",
    "author": "davidwoodburn",
    "comments": [
      {
        "user": "l-lumin",
        "created_at": "2024-12-19T15:40:47Z",
        "body": "could you try downgrading your NumPy version to 1.26.4? I think the issue might be caused by changes to the C API in NumPy 2.0"
      },
      {
        "user": "davidwoodburn",
        "created_at": "2024-12-19T23:22:23Z",
        "body": "That worked. Thank you. Now, should being compatible with NumPy 2.0 be a separate issue?"
      }
    ],
    "satisfaction_conditions": [
      "A solution that resolves the ValueError related to numpy.dtype size incompatibility",
      "A clear explanation of the cause of the error",
      "Guidance on appropriate package version compatibility"
    ],
    "_classification": {
      "category": "Does not need build environment",
      "timestamp": "2025-04-14 01:01:52"
    }
  }
]